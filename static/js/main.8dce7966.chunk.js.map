{"version":3,"sources":["redux.js","ImageList/ImageList.js","Columns/Columns.js","App.js","index.js"],"names":["ACTIONS","initialState","data","column1","id","imageList","column2","column3","dndReducer","state","action","type","newCol","payload","newStartCol","newEndCol","ImageList","props","text","index","draggableId","provided","className","ref","innerRef","draggableProps","dragHandleProps","src","alt","Columns","col","droppableId","droppableProps","map","placeholder","App","dndColumns","useSelector","dispatch","useDispatch","onDragEnd","source","destination","undefined","start","end","newList","filter","_","idx","splice","newStartList","newEndList","Object","values","rootElement","document","getElementById","ReactDOM","render","store","createStore"],"mappings":"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","file":"static/js/main.8dce7966.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nexport const ACTIONS = {\n  DRAG_HAPPENED: \"DRAG_HAPPENED\"\n};\n\nconst initialState = {\n  data: {\n    column1: {\n      id: \"Col 1\",\n      imageList: [\"first\", \"second\", \"third\"]\n    },\n    column2: {\n      id: \"Col 2\",\n      imageList: []\n    },\n    column3: {\n      id: \"Col 3\",\n      imageList: []\n    }\n  }\n};\n\nfunction dndReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.DRAG_HAPPENED: {\n      const newCol = action.payload;\n      if (newCol.newStartCol) {\n        const { newStartCol, newEndCol } = action.payload;\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            [newStartCol.id]: newStartCol,\n            [newEndCol.id]: newEndCol\n          }\n        };\n      }\n      return {\n        ...state,\n        data: { ...state.data, [newCol.id]: newCol }\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport function createReduxStore() {\n  const store = createStore(dndReducer);\n  return store;\n}\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"../ImageList/ImageList.css\";\n\nconst ImageList = (props) => {\n  const { text, index } = props;\n  return (\n    <Draggable draggableId={text} index={index}>\n      {(provided) => (\n        <img\n          className=\"itemLayout\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          src={`\\\\images\\\\${text}.jpeg`}\n          alt={props.src}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport ImageList from \"../ImageList/ImageList\";\nimport \"../Columns/Columns.css\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst Columns = ({ col }) => {\n  const { imageList, id } = col;\n  return (\n    <Droppable droppableId={id}>\n      {(provided) => (\n        <div className=\"columnStyle\">\n          <h2>{id}</h2>\n          <div\n            className=\"rowStyle\"\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            {imageList.map((text, index) => (\n              <ImageList key={text} text={text} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Columns;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS } from \"./redux\";\nimport \"./styles.css\";\nimport Columns from \"./Columns/Columns\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nexport default function App() {\n  const dndColumns = useSelector((state) => state.data);\n  const dispatch = useDispatch();\n  // State can be managed via UseState hooks also like below commented out lines\n  // const [columns, setColumns] = useState(initialData);\n  const onDragEnd = ({ source, destination }) => {\n    // Checking if its a valid destination\n    if (destination === undefined || destination === null) return null;\n    // If its drag to the same column, do nothing\n    if (\n      source.droppableId === destination.droppableId &&\n      destination.index === source.index\n    )\n      return null;\n\n    const start = dndColumns[source.droppableId];\n    const end = dndColumns[destination.droppableId];\n\n    if (start === end) {\n      const newList = start.imageList.filter((_, idx) => idx !== source.index);\n      newList.splice(destination.index, 0, start.imageList[source.index]);\n\n      const newCol = {\n        id: start.id,\n        imageList: newList\n      };\n      // Updating the state via redux-hooks\n      dispatch({\n        type: ACTIONS.DRAG_HAPPENED,\n        payload: newCol\n      });\n      // Updating the state via UseState hooks\n      // setColumns((state) => ({ ...state, [newCol.id]: newCol }));\n      return null;\n    } else {\n      /*If the droppaple source is different then We have \n      to update start and end columns respectively*/\n      const newStartList = start.imageList.filter(\n        (_, idx) => idx !== source.index\n      );\n      const newStartCol = {\n        id: start.id,\n        imageList: newStartList\n      };\n      const newEndList = end.imageList;\n\n      newEndList.splice(destination.index, 0, start.imageList[source.index]);\n\n      const newEndCol = {\n        id: end.id,\n        imageList: newEndList\n      };\n      // Updating the state via redux-hooks\n      dispatch({\n        type: ACTIONS.DRAG_HAPPENED,\n        payload: { newStartCol, newEndCol }\n      });\n\n      // Updating the state via react hooks\n      // setColumns((state) => ({\n      //   ...state,\n      //   [newStartCol.id]: newStartCol,\n      //   [newEndCol.id]: newEndCol\n      // }));\n      return null;\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"columnContainer\">\n        {Object.values(dndColumns).map((col) => (\n          <Columns col={col} key={col.id} />\n        ))}\n      </div>\n    </DragDropContext>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { createReduxStore } from \"./redux\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={createReduxStore()}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}